


## Colnames in a Seurat object are the 10x spatial barcodes
## for example TTGACAGGAGCTCCCG-1

## Extract colnames from a Seurat object
# just 1 Seurat object
spbar_siar3 <- colnames(siAR3_M14_D1)
# write to a file
write.table(spbar_siar3, file = "/PATH/SpatialPath/test_spbar7.txt", row.names = F, quote = F, col.names = F)

# Multiple Seurat objects in the Global environment
#######
# Get a list of all objects in the global environment
all_objects <- ls()

# Filter the objects that are Seurat objects
seurat_objects <- all_objects[sapply(all_objects, function(obj) class(get(obj)) == "Seurat")]

# Specify the directory where you want to save the files
output_directory <- "/Users/cathal.king/Documents/Projects/LB/AR_kd/spbars/"

# Loop through each Seurat object, extract colnames, and write to a file
for (seurat_obj_name in seurat_objects) {
  seurat_obj <- get(seurat_obj_name)
  col_names <- colnames(seurat_obj)
  
  # Construct the file path based on the object name
  file_path <- paste0(output_directory, seurat_obj_name, "_spbars.txt")
  
  # Write the colnames to a file
  write.table(col_names, file = file_path, row.names = FALSE, quote = FALSE, col.names = FALSE)
}


## sinto is much quicker than samtools
conda activate /cancer/storage/tools/conda_apps/sinto/env/
sinto -v # check installation

# example
source /homes/paul.wang/mambaforge/bin/activate /hpc/capacity/tools/testing/sinto/env

# F28C
  sinto filterbarcodes \
  --bam /homes/cathal.king/LB/AR_kd/SR_F28_067_C1/outs/possorted_genome_bam.bam \
  --nproc 10 \
  --cells /homes/cathal.king/LB/AR_kd/SpatialPath/spbar_lists/siCon1_F28_C1_spbars_new.txt \
  --outdir /homes/cathal.king/LB/AR_kd/SpatialPath/sinto_all/siCon1_F28_C1_spbars




## run samtools on the Visium BAM file, with a list of spbars as input so that it will parse down the BAM file to 1 BAM file per-spot.
## samtools 1.17 or greater is required for this process.
for i in $(cat PATH/sample_spbars.txt) ; do samtools view -b -d CB:$i /PATH/outs/possorted_genome_bam.bam > $i.bam ; done

## Once samtools is finished parsing the BAM file, featureCounts will be run on each per-spot BAM file to assign reads to Features.

####### Command to generate counts with feature counts:
featureCounts -T 32 -t exon -g gene_id -a /homes/feargal.ryan/databases/grch38/Homo_sapiens.GRCh38.109.gtf -o /homes/cathal.king/LB/AR_kd/SpatialPath/spbars/siAR3_M14_D1_spbars/featureCounts/fCounts_siAR3_M14_D1.txt  /homes/cathal.king/LB/AR_kd/SpatialPath/spbars/siAR3_M14_D1_spbars/bams_perSpot/*.bam

-a annotation file for Human
/homes/feargal.ryan/databases/grch38/Homo_sapiens.GRCh38.109.gtf

featureCounts -T 32 -t exon -g gene_id 
-a ~/databases/grcm38/Mus_musculus.GRCm38.99.gtf 
-o featureCountstest.txt /homes/cathal.king/Devel/A1_spots/*/*bam

This is installable via conda

"featureCounts" "-T" "32" "-t" "exon" "-g" "gene_id" 
"-a" "/homes/feargal.ryan/databases/grcm38/Mus_musculus.GRCm38.99.gtf"
"-o" "/homes/cathal.king/Devel/featureCounts/featureCounts_A1_tumour.txt"
"/homes/cathal.king/Devel/tumour_spot_barcodes/A1/tumour_spots/AAACGAGACGGTTGAT-1.bam"

conda install -c bioconda subread
 
featureCounts -T 32 -t exon -g gene_id 
-a ~/databases/grcm38/Mus_musculus.GRCm38.99.gtf 
-o featureCounts_A1.txt /homes/cathal.king/Devel/A1_spots/*/*bam

## The output file from featureCounts needs to be cleaned up so that it has genes (ENSXXX) as the rownames and 10x barcodes as the colnames.

# remove the first row from the file which just has info on the fCount command
tail -n +2 fCounts_siAR3_M14_D1.txt > output.txt

# then remove the 2nd to the 6th column
cut -f 1,7- output3.txt > output5.txt

# remove the PATH string from the beginning of each column name
#sed 's#/homes/cathal.king/LB/AR_kd/SpatialPath/spbars/siAR3_M14_D1_spbars/bams_perSpot/##g' output5.txt > output6.txt
# and the ".bam" from each colname
sed 's#/homes/cathal.king/LB/AR_kd/SpatialPath/spbars/siAR3_M14_D1_spbars/bams_perSpot/##g; s/\.bam//g' output5.txt > output7.txt



## At the end of the GSVA R script, there will be a csv file which has an activity score (based on the chosen pathway) for each Visium spot.
## This file is then added to the Seurat object making sure that the barcodes are matched up correctly.

## that process is shown here

## colour spots based on a selection of barcodes

library(Seurat)
library(SpatialExperiment)
library(dplyr)
library(tibble)
#library(ggspavis)
#library(Voyager)


#####
## Seurat object
A1_seu <- readRDS("/Users/cathal.king/Documents/Projects/DL/Visium_Mouse/Seurat/Visium_mouse_Re_seurat_A1.rds")
SpatialPlot(object = A1_seu)


# path must contain a 10x "/outs/" folder
# sample <- file.path("/Users/cathal.king/Documents/Projects/DL/Visium_Mouse/SpaceRanger_trial_grey/outs")
# # read in
# A1_spe <- read10xVisium(samples = sample, type = "sparse", images = "lowres")
# A1_spe
# # View image in SPE object
# plotVisium(A1_spe)


###########################################################
## pathway df
A_pathways <- read.csv(file = "/Users/cathal.king/Documents/Projects/DL/featureCounts_clean/GSVA_results/A1_Per_spot_activity_scores.csv", row.names = 1)
# colnames of the pathways df are the barcodes
# rownames of the pathways df are the pathways

# test
# Remove the "_A1" from the end of each column name
colnames(A_pathways) <- sub("_A1$", "", colnames(A_pathways))

A_pathways_t <- as.data.frame(t(A_pathways))

# copy the rownames column (the 10x barcodes) to a different column in the pathways df
A_pathways_t <- A_pathways_t %>%
  mutate(Barcode = rownames(.))

###########################################################

###########################################################
### if using a select list of barcodes from 10x Loupe browser
#barcodes_to_add <- read.table(file = "/Users/cathal.king/Documents/Projects/DL/spatial_plots/barcodes2.txt", header = F, col.names = "barcodes")
barcodes_to_add <- read.csv(file = "/Users/cathal.king/Documents/Projects/DL/spatial_plots/A1_tumour_barcodes.csv", header = T, sep = ",")
# drop the other column
barcodes_to_add <- barcodes_to_add %>% select(-A1_tumour)

# test
# Remove the "-1" from the end of each column name
colnames(A1_seu) <- sub("-1$", "", colnames(A1_seu))
###########################################################


# extract seu metadata
meta_data_A1 <- A1_seu@meta.data

# copy the rownames column (the 10x barcodes) to a different column in the meta_data
meta_data_A1_new <- meta_data_A1 %>%
  mutate(Barcode = rownames(.))

#############
## now join the pathways df to the extracted meta-data df
meta_data_A1_joined <- left_join(x = meta_data_A1_new, y = A_pathways_t2, by = "Barcode", keep=T)


### add that new meta data back into the Seurat object

## add the meta-data column with the matched barcodes to the seurat object. each pathway 1-by-1
A1_seu <- AddMetaData(object = A1_seu, metadata = meta_data_A1_joined, col.name = "GOBP_LYMPHOCYTE_ACTIVATION")

A1_seu <- AddMetaData(object = A1_seu, metadata = meta_data_A1_joined, col.name = "GOBP_B_CELL_ACTIVATION")
A1_seu <- AddMetaData(object = A1_seu, metadata = meta_data_A1_joined, col.name = "GOBP_EPITHELIAL_CELL_DIFFERENTIATION")
A1_seu <- AddMetaData(object = A1_seu, metadata = meta_data_A1_joined, col.name = "GOBP_HORMONE_METABOLIC_PROCESS")




